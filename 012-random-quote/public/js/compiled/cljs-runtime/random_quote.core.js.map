{"version":3,"sources":["random_quote/core.cljs"],"mappings":";;;;AAMA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAU,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;;AAGpB,AAAA,AAAKC;AAEL,AAAA,AAAMC,AAAaC;AAAnB,AACE,AAAA,AAAA,AAAA,AAACC,AACc,AAAKC;AAAL,AACE,AAAA,AAACC,AAAMH,AAAMI,AAAc,AAAA,AAACC,AAAIH;;AAChC,AAAA,AAACC,AAAMH,AAAMI,AAAY,AAAA,AAACC,AAAIH;AAH/C,AAIqB,AAAAI;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAF,AAAAE,AAAA,AAAaI;AAAb,AAAAN,AAAAE,AAAA,AAAoBK;AAApB,AACE,AAACC,AAAeF,AAAOC;;;AAEhD,AAAA,AAAME,AAAYd;AAAlB,AACE,AAAA,AAAA,AACK,AAAA,AAAA,AAAAe,AAAQf,AAER,AAAA,AAAA,AAAAe,AAAUf;;AAEjB,AAAA,AAAMgB,AAAOhB;AAAb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKuB,AAAA,AAAA,AAAAe,AAAQf,AACT,AAAA,AAAA,AAAAe,AAAUf,AAGhB,AAACc,AAAWd;AAT5B,AAW0B,AAACD,AAAYC;AAXvC;;AAcA,AAAA,AAAMiB;AAAN,AACE,AAAAC,AAAA,AAA2BF,AAAMpB;AAAjCuB,AAC0B,AAAA,AAAGE;AAD7B,AAAA,AAAAH,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AAGH,AAAA,AAAeE;AAAf,AAIE,AAACL;;;AAEH,AAAA,AAAMM;AAAN,AAGE,AAAA,AAACV","names":["js/random-quote","js/random-quote.core","js/random-quote.core.app-state","random-quote.core/app-state","reagent.core.atom","random-quote.core/url","random-quote.core/fetch-link!","state","ajax.core.GET","data","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.get","p__27855","map__27856","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","status","status-text","js/console.log","random-quote.core/tweet-link","cljs.core/deref","random-quote.core/quote","random-quote.core/start","G__27858","G__27859","reagent.core/render-component","js/document","random-quote.core/init","random-quote.core/stop"],"sourcesContent":["(ns random-quote.core\n  (:require [reagent.core :as reagent :refer [atom]]\n            [ajax.core :refer [GET]]))\n\n;; define your app data so that it doesn't get over-written on reload\n\n(defonce app-state (atom {:text \"Quote\"\n                          :author \"Author\"}))\n\n(def url \"https://quote-garden.herokuapp.com/quotes/random\")\n\n(defn fetch-link! [state]\n  (GET \"https://quote-garden.herokuapp.com/quotes/random\"\n       {:handler (fn [data]\n                   (swap! state assoc :author (get data \"quoteAuthor\"))\n                   (swap! state assoc :text (get data \"quoteText\")))\n        :error-handler (fn [{:keys [status status-text]}]\n                         (js/console.log status status-text))}))\n\n(defn tweet-link [state]\n  (str \"https://twitter.cm/intent/tweet?hashtags=quote&text=\" \n       (:text @state) \n       \" - \"\n       (:author @state)))\n\n(defn quote [state]\n  [:div\n   [:h1 \"Random Quote Generator\"]\n   [:div.quote\n    [:div.quote-container\n     [:p.quote-content (:text @state)]\n     [:p.quote-author (:author @state)]]\n     \n    [:div.quote-buttons\n     [:a {:href (tweet-link state)\n          :target \"_blank\"} \"tweet!\"]\n     [:button {:on-click #(fetch-link! state)} \"GET QUOTE!\"]]]])\n\n\n(defn start []\n  (reagent/render-component [quote app-state]\n                            (. js/document (getElementById \"app\"))))\n\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n  (start))\n\n(defn stop []\n  ;; stop is called before any code is reloaded\n  ;; this is controlled by :before-load in the config\n  (js/console.log \"stop\"))\n"]}